//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2021-12-01 by the VDM++ to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 10:11:21 +0900)
//
#ifndef _IO_anonym_h
#define _IO_anonym_h


#include "IO_userdef.h"
#include "metaiv.h"

extern const Quote quote_start;

extern const Quote quote_append;

class type_ref_IO;
class type_cL;
class type_bU2P;
class type_GenericL;
#define TYPE_IO_filedirective Generic
#ifndef TAG_quote_start
#define TAG_quote_start (TAG_IO + 1)
#endif // TAG_quote_start

#ifndef TAG_quote_append
#define TAG_quote_append (TAG_IO + 2)
#endif // TAG_quote_append

#ifndef TAG_type_ref_IO
#define TAG_type_ref_IO (TAG_IO + 3)
#endif // TAG_type_ref_IO

#ifndef DECL_type_cL
#define DECL_type_cL 1


class type_cL : public SEQ< Char > {
public:
  type_cL () : SEQ< Char >() {}

  type_cL (const SEQ< Char > &c) : SEQ< Char >(c) {}

  type_cL (const Common &c) : SEQ< Char >(c) {}

  const wchar_t * GetTypeName () const   {
    return L"type_cL";
  }

};

#endif // DECL_type_cL

#ifndef DECL_type_bU2P
#define DECL_type_bU2P 1


class type_bU2P : public Tuple {
public:
  type_bU2P () : Tuple(2) {}

  type_bU2P &Init (const Bool &p1, const Generic &p2);
  type_bU2P (const Common &c) : Tuple(c) {}

  const wchar_t * GetTypeName () const   {
    return L"type_bU2P";
  }

  Bool get_1 () const;
  void set_1 (const Bool &p);
  Generic get_2 () const;
  void set_2 (const Generic &p);
};

#endif // DECL_type_bU2P

#ifndef DECL_type_GenericL
#define DECL_type_GenericL 1


class type_GenericL : public SEQ< Generic > {
public:
  type_GenericL () : SEQ< Generic >() {}

  type_GenericL (const SEQ< Generic > &c) : SEQ< Generic >(c) {}

  type_GenericL (const Common &c) : SEQ< Generic >(c) {}

  const wchar_t * GetTypeName () const   {
    return L"type_GenericL";
  }

};

#endif // DECL_type_GenericL



#endif // _IO_anonym_h
