//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2021-12-01 by the VDM++ to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 10:11:21 +0900)
//
#ifndef _Environnement_anonym_h
#define _Environnement_anonym_h


#include "Environnement_userdef.h"
#include "metaiv.h"

extern const Quote quote_A;

extern const Quote quote_B;

extern const Quote quote_C;

extern const Quote quote_NUL;

class type_ref_Environnement;
class type_ibUiiii7P;
class type_cL;
#define TYPE_Environnement_data type_ibUiiii7P
#ifndef TAG_quote_A
#define TAG_quote_A (TAG_Environnement + 1)
#endif // TAG_quote_A

#ifndef TAG_quote_B
#define TAG_quote_B (TAG_Environnement + 2)
#endif // TAG_quote_B

#ifndef TAG_quote_C
#define TAG_quote_C (TAG_Environnement + 3)
#endif // TAG_quote_C

#ifndef TAG_quote_NUL
#define TAG_quote_NUL (TAG_Environnement + 4)
#endif // TAG_quote_NUL

#ifndef TAG_type_ref_Environnement
#define TAG_type_ref_Environnement (TAG_Environnement + 5)
#endif // TAG_type_ref_Environnement

#ifndef DECL_type_ibUiiii7P
#define DECL_type_ibUiiii7P 1


class type_ibUiiii7P : public Tuple {
public:
  type_ibUiiii7P () : Tuple(7) {}

  type_ibUiiii7P &Init (const Int &p1, const Bool &p2, const Generic &p3, const Int &p4, const Int &p5, const Int &p6, const Int &p7);
  type_ibUiiii7P (const Common &c) : Tuple(c) {}

  const wchar_t * GetTypeName () const   {
    return L"type_ibUiiii7P";
  }

  Int get_1 () const;
  void set_1 (const Int &p);
  Bool get_2 () const;
  void set_2 (const Bool &p);
  Generic get_3 () const;
  void set_3 (const Generic &p);
  Int get_4 () const;
  void set_4 (const Int &p);
  Int get_5 () const;
  void set_5 (const Int &p);
  Int get_6 () const;
  void set_6 (const Int &p);
  Int get_7 () const;
  void set_7 (const Int &p);
};

#endif // DECL_type_ibUiiii7P

#ifndef DECL_type_cL
#define DECL_type_cL 1


class type_cL : public SEQ< Char > {
public:
  type_cL () : SEQ< Char >() {}

  type_cL (const SEQ< Char > &c) : SEQ< Char >(c) {}

  type_cL (const Common &c) : SEQ< Char >(c) {}

  const wchar_t * GetTypeName () const   {
    return L"type_cL";
  }

};

#endif // DECL_type_cL



#endif // _Environnement_anonym_h
