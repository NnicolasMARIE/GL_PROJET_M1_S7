//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2021-12-01 by the VDM++ to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 10:11:21 +0900)
//
// This file was genereted from "C:\\Users\\nmari\\GL_PROJET_M1_S7\\Two\\Capteur.vdmpp".

#ifndef _Capteur_h
#define _Capteur_h

#include <math.h>
#include "metaiv.h"
#include "cg.h"
#include "cg_aux.h"
#include "CGBase.h"
#include "Capteur_anonym.h"
#include "Controleur.h"



class type_ref_Capteur : public virtual ObjectRef {
public:
  type_ref_Capteur () : ObjectRef() {}

  type_ref_Capteur (const Common &c) : ObjectRef(c) {}

  type_ref_Capteur (vdmBase * p) : ObjectRef(p) {}

  const wchar_t * GetTypeName () const   {
    return L"type_ref_Capteur";
  }

};



class vdm_Capteur : public virtual CGBase {
public:
  vdm_Capteur * Get_vdm_Capteur ()   {
    return this;
  }

  ObjectRef Self ()   {
    return ObjectRef(Get_vdm_Capteur());
  }

  int vdm_GetId ()   {
    return VDM_Capteur;
  }

  vdm_Capteur ();
  virtual ~vdm_Capteur () {}

  void vdm_init_Capteur ();
protected:
  Int vdm_ID;
  Quote vdm_Type;
  Map vdm_Valeur;
  ObjectRef vdm_Env;
  Int vdm_periode;
  Bool vdm_estPeriodique;
  virtual void vdm_Action ()=0;
public:
  virtual Int vdm_GetID ();
  virtual TYPE_Controleur_typeActeur vdm_GetType ();
  virtual type_iiM vdm_ReadValeur ();
};


#endif // _Capteur_h
