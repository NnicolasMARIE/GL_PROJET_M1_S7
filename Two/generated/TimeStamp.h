//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2021-12-01 by the VDM++ to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 10:11:21 +0900)
//
// This file was genereted from "C:\\Users\\nmari\\GL_PROJET_M1_S7\\Two\\TimeStamp.vdmpp".

#ifndef _TimeStamp_h
#define _TimeStamp_h

#include <math.h>
#include "metaiv.h"
#include "cg.h"
#include "cg_aux.h"
#include "CGBase.h"
#include "TimeStamp_anonym.h"



class type_ref_TimeStamp : public virtual ObjectRef {
public:
  type_ref_TimeStamp () : ObjectRef() {}

  type_ref_TimeStamp (const Common &c) : ObjectRef(c) {}

  type_ref_TimeStamp (vdmBase * p) : ObjectRef(p) {}

  const wchar_t * GetTypeName () const   {
    return L"type_ref_TimeStamp";
  }

};



class vdm_TimeStamp : public virtual CGBase {

  friend class init_TimeStamp ;
public:
  vdm_TimeStamp * Get_vdm_TimeStamp ()   {
    return this;
  }

  ObjectRef Self ()   {
    return ObjectRef(Get_vdm_TimeStamp());
  }

  int vdm_GetId ()   {
    return VDM_TimeStamp;
  }

  vdm_TimeStamp ();
  virtual ~vdm_TimeStamp () {}

  void vdm_init_TimeStamp ();
private:
  virtual void vdm_enVeille ();
  virtual void vdm_AddAtabReveil (const Int &, const Generic &);
  virtual void vdm_leverBarriere ();
  Bool vdm_post_leverBarriere ();
public:
  static Int vdm_pas;
  Int vdm_dateActuelle;
  Map vdm_tabReveil;
  Int vdm_comptBarriere;
  virtual Int vdm_GetTime ();
  vdm_TimeStamp (const Int &);
  virtual void vdm_WaitAbsolu (const Int &);
  virtual void vdm_WaitRelatif (const Int &);
  virtual void vdm_NotifyThread (const Int &);
};


#endif // _TimeStamp_h
