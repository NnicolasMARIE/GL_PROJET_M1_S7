//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2021-12-01 by the VDM++ to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 10:11:21 +0900)
//
#ifndef _Controleur_anonym_h
#define _Controleur_anonym_h


#include "Controleur_userdef.h"
#include "metaiv.h"

extern const Quote quote_NUL;

extern const Quote quote_DETECTEUR;

extern const Quote quote_DISPENSEUR;

extern const Quote quote_CAPTEUR_DISTANCE;

extern const Quote quote_CAPTEUR_LATITUDE;

extern const Quote quote_CAPTEUR_LONGITUDE;

extern const Quote quote_CONTROLEUR_DISPENSEUR;

extern const Quote quote_A;

extern const Quote quote_B;

extern const Quote quote_C;

class type_ref_Controleur;
class type_iUM;
#define TYPE_Controleur_typeMenace Generic
#define TYPE_Controleur_typeActeur Generic
#ifndef TAG_quote_NUL
#define TAG_quote_NUL (TAG_Controleur + 1)
#endif // TAG_quote_NUL

#ifndef TAG_quote_DETECTEUR
#define TAG_quote_DETECTEUR (TAG_Controleur + 2)
#endif // TAG_quote_DETECTEUR

#ifndef TAG_quote_DISPENSEUR
#define TAG_quote_DISPENSEUR (TAG_Controleur + 3)
#endif // TAG_quote_DISPENSEUR

#ifndef TAG_quote_CAPTEUR_DISTANCE
#define TAG_quote_CAPTEUR_DISTANCE (TAG_Controleur + 4)
#endif // TAG_quote_CAPTEUR_DISTANCE

#ifndef TAG_quote_CAPTEUR_LATITUDE
#define TAG_quote_CAPTEUR_LATITUDE (TAG_Controleur + 5)
#endif // TAG_quote_CAPTEUR_LATITUDE

#ifndef TAG_quote_CAPTEUR_LONGITUDE
#define TAG_quote_CAPTEUR_LONGITUDE (TAG_Controleur + 6)
#endif // TAG_quote_CAPTEUR_LONGITUDE

#ifndef TAG_quote_CONTROLEUR_DISPENSEUR
#define TAG_quote_CONTROLEUR_DISPENSEUR (TAG_Controleur + 7)
#endif // TAG_quote_CONTROLEUR_DISPENSEUR

#ifndef TAG_quote_A
#define TAG_quote_A (TAG_Controleur + 8)
#endif // TAG_quote_A

#ifndef TAG_quote_B
#define TAG_quote_B (TAG_Controleur + 9)
#endif // TAG_quote_B

#ifndef TAG_quote_C
#define TAG_quote_C (TAG_Controleur + 10)
#endif // TAG_quote_C

#ifndef TAG_type_ref_Controleur
#define TAG_type_ref_Controleur (TAG_Controleur + 11)
#endif // TAG_type_ref_Controleur

#ifndef DECL_type_iUM
#define DECL_type_iUM 1


class type_iUM : public MAP< Int,Generic > {
public:
  type_iUM () : MAP< Int,Generic >() {}

  type_iUM (const MAP< Int,Generic > &c) : MAP< Int,Generic >(c) {}

  type_iUM (const Common &c) : MAP< Int,Generic >(c) {}

  const wchar_t * GetTypeName () const   {
    return L"type_iUM";
  }

};

#endif // DECL_type_iUM



#endif // _Controleur_anonym_h
