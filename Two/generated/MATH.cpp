//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2021-12-01 by the VDM++ to C++ Code Generator
// (v9.0.7 - Sat 09-Jun-2018 10:11:21 +0900)
//
// This file was genereted from "C:\\Users\\nmari\\GL_PROJET_M1_S7\\Two\\lib\\MATH.vdmpp".


#include "vdm_MATH.h"
#include "MATH_userimpl.cpp"


Real vdm_MATH::vdm_pi;


class init_MATH {
public:
  init_MATH ()   {
    vdm_MATH::vdm_pi = Real(3.141592653589793);
  }

};

init_MATH Init_MATH;

vdm_MATH::vdm_MATH () {
  this->vdm_init_MATH();
}

void vdm_MATH::vdm_init_MATH () {
  this->RegisterAsBase(this->vdm_GetId());
}

#ifndef DEF_MATH_acot

Real vdm_MATH::vdm_acot (const Real &vdm_a) {
  if (!vdm_pre_acot(vdm_a).GetValue()) {
    CGUTIL::RunTime(L"Precondition failure in acot");
  }
  return vdm_atan(Int(1) / vdm_a);
}

#endif // DEF_MATH_acot

#ifndef DEF_MATH_pre_acot

Bool vdm_MATH::vdm_pre_acot (const Real &vdm_a) {
  return Bool(!(vdm_a.GetValue() == 0));
}

#endif // DEF_MATH_pre_acot

#ifndef DEF_MATH_srand

void vdm_MATH::vdm_srand (const Int &vdm_a) {
  if (!vdm_pre_srand(vdm_a).GetValue()) {
    CGUTIL::RunTime(L"Precondition failure in srand");
  }
  vdm_MATH::vdm_srand2(vdm_a);
}

#endif // DEF_MATH_srand

#ifndef DEF_MATH_pre_srand

Bool vdm_MATH::vdm_pre_srand (const Int &vdm_a) {
  return Bool(vdm_a.GetValue() >= -1);
}

#endif // DEF_MATH_pre_srand


