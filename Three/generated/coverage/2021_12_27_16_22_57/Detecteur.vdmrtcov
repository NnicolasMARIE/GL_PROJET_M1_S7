class Detecteur 
--modelise un detecteur de menace
instance variables
	private identifiantM : nat  := 0;
	private ID	: nat; -- identitï¿½ des capteurs
	private Type	: Controleur`typeActeur;  --type des capteurs

private Fini		: bool:=false; 

operations

public Detecteur: nat * Controleur`typeActeur ==> Detecteur
	Detecteur(id, type) ==
		(ID := id;
		Type := type;

		);


public estFini: () ==> ()
estFini() == 
  skip;

public Finir: () ==> ()
Finir() == 
  Fini := true;

public Action : () ==> ()
	Action() == (

		if Animation`env.GetDetectionNouvelleMenace() 
		then (
			Animation`env.SetNouvelleMenace(false);
			if Animation`env.GetDetectionTypeMenace() <> <NUL> 
			then(
				IO`print("\n detection missile ennemi de type : ");
				IO`print(Animation`env.GetDetectionTypeMenace());
			SystemeRTP`Pilote.addMenace({identifiantM |->  Animation`env.GetDetectionTypeMenace()});
			identifiantM := identifiantM + 1    ;
			)
		)
	)	
	
sync
 per estFini => Fini;

thread

periodic(1000E6,0,0,0) (Action)


-- per printStr => indicateur;
		


end Detecteur